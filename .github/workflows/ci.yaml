name: frontend-ci

on:
  push:
    branches: ["main"]
  workflow_dispatch:

concurrency:
  group: frontend-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_push:
    name: Build & Push Docker image
    runs-on: ubuntu-latest
    env:
      IMAGE: raedbari/frontend         
      TAG: ${{ github.sha }}           # ← وسم commit
      NEXT_PUBLIC_API_BASE: ${{ vars.NEXT_PUBLIC_API_BASE }}  
      SSR_API_BASE: ${{ vars.SSR_API_BASE }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push image (sha + latest)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          build-args: |
             NEXT_PUBLIC_API_BASE=${{ env.NEXT_PUBLIC_API_BASE }}
             SSR_API_BASE=${{ env.SSR_API_BASE }} 
          tags: |
            ${{ env.IMAGE }}:${{ env.TAG }}
            ${{ env.IMAGE }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy_to_k8s:
    name: Set image & rollout on cluster
    needs: build_and_push
    runs-on: self-hosted            # الـrunner على EC2 الذي عليه kubectl موصول بالكلاستر
    env:
      IMAGE: raedbari/frontend
      TAG: ${{ github.sha }}
      NAMESPACE: default
      DEPLOYMENT: frontend
      CONTAINER: frontend
    steps:
      - name: Sanity check
        shell: bash
        run: |
          set -euo pipefail
          kubectl version --client
          kubectl -n "$NAMESPACE" get deploy "$DEPLOYMENT" -o name

      - name: Update image & wait for rollout
        shell: bash
        run: |
          kubectl -n "$NAMESPACE" set image deploy/"$DEPLOYMENT" \
            "$CONTAINER"="${IMAGE}:${TAG}"

          kubectl -n "$NAMESPACE" annotate deploy/"$DEPLOYMENT" \
            ci.commit="${GITHUB_SHA}" ci.image="${IMAGE}:${TAG}" --overwrite

          kubectl -n "$NAMESPACE" rollout status deploy/"$DEPLOYMENT" --timeout=300s

      - name: Show resulting image
        shell: bash
        run: |
          echo -n "Resulting image: "
          kubectl -n "$NAMESPACE" get deploy "$DEPLOYMENT" \
            -o jsonpath='{.spec.template.spec.containers[?(@.name=="'"$CONTAINER"'")].image}{"\n"}'
